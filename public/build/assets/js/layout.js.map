{"version":3,"sources":["layout.js","quick-sidebar.js"],"names":[],"mappingstqfile":"layout.js","sourcesContent":["/**\nCore script to handle the entire theme and core functions\n**/\nvar Layout = function () {\n\n    var layoutImgPath = 'layouts/layout/img/';  \n\n    var layoutCssPath = 'layouts/layout/css/';\n\n    var resBreakpointMd = App.getResponsiveBreakpoint('md');\n\n    var ajaxContentSuccessCallbacks = [];\n    var ajaxContentErrorCallbacks = [];\n\n    //* BEGIN:CORE HANDLERS *//\n    // this function handles responsive layout on screen size resize or mobile device rotate.\n\n    // Set proper height for sidebar and content. The content and sidebar height must be synced always.\n    var handleSidebarAndContentHeight = function () {\n        var content = $('.page-content');\n        var sidebar = $('.page-sidebar');\n        var body = $('body');\n        var height;\n\n        if (body.hasClass(\"page-footer-fixed\") === true && body.hasClass(\"page-sidebar-fixed\") === false) {\n            var available_height = App.getViewPort().height - $('.page-footer').outerHeight() - $('.page-header').outerHeight();\n            var sidebar_height = sidebar.outerHeight();\n            if (sidebar_height > available_height) {\n                available_height = sidebar_height + $('.page-footer').outerHeight();\n            }\n            if (content.height() < available_height) {\n                content.css('min-height', available_height);\n            }\n        } else {\n            if (body.hasClass('page-sidebar-fixed')) {\n                height = _calculateFixedSidebarViewportHeight();\n                if (body.hasClass('page-footer-fixed') === false) {\n                    height = height - $('.page-footer').outerHeight();\n                }\n            } else {\n                var headerHeight = $('.page-header').outerHeight();\n                var footerHeight = $('.page-footer').outerHeight();\n\n                if (App.getViewPort().width < resBreakpointMd) {\n                    height = App.getViewPort().height - headerHeight - footerHeight;\n                } else {\n                    height = sidebar.height() + 20;\n                }\n\n                if ((height + headerHeight + footerHeight) <= App.getViewPort().height) {\n                    height = App.getViewPort().height - headerHeight - footerHeight;\n                }\n            }\n            content.css('min-height', height);\n        }\n    };\n\n    // Handle sidebar menu links\n    var handleSidebarMenuActiveLink = function (mode, el, $state) {\n        var url = location.hash.toLowerCase();\n        var menu = $('.page-sidebar-menu');\n \n        if (mode === 'click' || mode === 'set') {\n            el = $(el);\n        } else if (mode === 'match') {\n            menu.find('li > a').each(function () {\n                var state = $(this).attr('ui-sref');\n                if ($state && state) {\n                    if ($state.is(state)) {\n                        el = $(this);\n                        return;\n                    }\n                } else {\n                    var path = $(this).attr('href');\n                    if (path) {\n                        // url match condition         \n                        path = path.toLowerCase();\n                        if (path.length > 1 && url.substr(1, path.length - 1) == path.substr(1)) {\n                            el = $(this);\n                            return;\n                        }\n                    }\n                }\n            });\n        }\n \n        if (!el || el.size() == 0) {\n            return;\n        }\n \n        if (el.attr('href') == 'javascript:;' ||\n            el.attr('ui-sref') == 'javascript:;' ||\n            el.attr('href') == '#' ||\n            el.attr('ui-sref') == '#'\n            ) {\n            return;\n        }\n \n        var slideSpeed = parseInt(menu.data('slide-speed'));\n        var keepExpand = menu.data('keep-expanded');\n \n        // begin: handle active state\n        if (menu.hasClass('page-sidebar-menu-hover-submenu') === false) {\n            menu.find('li.nav-item.open').each(function () {\n                var match = false;\n                $(this).find('li').each(function () {\n                    var state = $(this).attr('ui-sref');\n                    if ($state && state) {\n                        if ($state.is(state)) {\n                            match = true;\n                            return;\n                        }\n                    } else if ($(this).find(' > a').attr('href') === el.attr('href')) {\n                        match = true;\n                        return;\n                    }\n                });\n \n                if (match === true) {\n                    return;\n                }\n \n                $(this).removeClass('open');\n                $(this).find('> a > .arrow.open').removeClass('open');\n                $(this).find('> .sub-menu').slideUp();\n            });\n        } else {\n            menu.find('li.open').removeClass('open');\n        }\n \n        menu.find('li.active').removeClass('active');\n        menu.find('li > a > .selected').remove();\n        // end: handle active state\n \n        el.parents('li').each(function () {\n            $(this).addClass('active');\n            $(this).find('> a > span.arrow').addClass('open');\n \n            if ($(this).parent('ul.page-sidebar-menu').size() === 1) {\n                $(this).find('> a').append('<span class=\"selected\"></span>');\n            }\n \n            if ($(this).children('ul.sub-menu').size() === 1) {\n                $(this).addClass('open');\n            }\n        });\n \n        if (mode === 'click') {\n            if (App.getViewPort().width < resBreakpointMd && $('.page-sidebar').hasClass('in')) { // close the menu on mobile view while laoding a page \n                $('.page-header .responsive-toggler').click();\n            }\n        }\n    };\n\n    // Handle sidebar menu\n    var handleSidebarMenu = function () {\n        // offcanvas mobile menu \n        $('.page-sidebar-mobile-offcanvas .responsive-toggler').click(function(e) {\n            $('body').toggleClass('page-sidebar-mobile-offcanvas-open');\n            e.preventDefault();\n            e.stopPropagation();\n        });\n\n        if ($('body').hasClass('page-sidebar-mobile-offcanvas')) {\n            $(document).on('click', function(e) {\n                if ($('body').hasClass('page-sidebar-mobile-offcanvas-open')) {\n                    if ($(e.target).closest('.page-sidebar-mobile-offcanvas .responsive-toggler').length === 0 && \n                        $(e.target).closest('.page-sidebar-wrapper').length === 0) { \n                        $('body').removeClass('page-sidebar-mobile-offcanvas-open');\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }                \n            });\n        }\n\n        // handle sidebar link click\n        $('.page-sidebar-menu').on('click', 'li > a.nav-toggle, li > a > span.nav-toggle', function (e) {\n            var that = $(this).closest('.nav-item').children('.nav-link');\n\n            if (App.getViewPort().width >= resBreakpointMd && !$('.page-sidebar-menu').attr(\"data-initialized\") && $('body').hasClass('page-sidebar-closed') &&  that.parent('li').parent('.page-sidebar-menu').size() === 1) {\n                return;\n            }\n\n            var hasSubMenu = that.next().hasClass('sub-menu');\n\n            if (App.getViewPort().width >= resBreakpointMd && that.parents('.page-sidebar-menu-hover-submenu').size() === 1) { // exit of hover sidebar menu\n                return;\n            }\n\n            if (hasSubMenu === false) {\n                if (App.getViewPort().width < resBreakpointMd && $('.page-sidebar').hasClass(\"in\")) { // close the menu on mobile view while laoding a page \n                    $('.page-header .responsive-toggler').click();\n                }\n                return;\n            }\n\n            var parent =that.parent().parent();\n            var the = that;\n            var menu = $('.page-sidebar-menu');\n            var sub = that.next();\n\n            var autoScroll = menu.data(\"auto-scroll\");\n            var slideSpeed = parseInt(menu.data(\"slide-speed\"));\n            var keepExpand = menu.data(\"keep-expanded\");\n            \n            if (!keepExpand) {\n                parent.children('li.open').children('a').children('.arrow').removeClass('open');\n                parent.children('li.open').children('.sub-menu:not(.always-open)').slideUp(slideSpeed);\n                parent.children('li.open').removeClass('open');\n            }\n\n            var slideOffeset = -200;\n\n            if (sub.is(\":visible\")) {\n                $('.arrow', the).removeClass(\"open\");\n                the.parent().removeClass(\"open\");\n                sub.slideUp(slideSpeed, function () {\n                    if (autoScroll === true && $('body').hasClass('page-sidebar-closed') === false) {\n                        if ($('body').hasClass('page-sidebar-fixed')) {\n                            menu.slimScroll({\n                                'scrollTo': (the.position()).top\n                            });\n                        } else {\n                            App.scrollTo(the, slideOffeset);\n                        }\n                    }\n                    handleSidebarAndContentHeight();\n                });\n            } else if (hasSubMenu) {\n                $('.arrow', the).addClass(\"open\");\n                the.parent().addClass(\"open\");\n                sub.slideDown(slideSpeed, function () {\n                    if (autoScroll === true && $('body').hasClass('page-sidebar-closed') === false) {\n                        if ($('body').hasClass('page-sidebar-fixed')) {\n                            menu.slimScroll({\n                                'scrollTo': (the.position()).top\n                            });\n                        } else {\n                            App.scrollTo(the, slideOffeset);\n                        }\n                    }\n                    handleSidebarAndContentHeight();\n                });\n            }\n\n            e.preventDefault();\n        });\n\n        // handle menu close for angularjs version\n        if (App.isAngularJsApp()) {\n            $(\".page-sidebar-menu li > a\").on(\"click\", function(e) {\n                if (App.getViewPort().width < resBreakpointMd && $(this).next().hasClass('sub-menu') === false) {\n                    $('.page-header .responsive-toggler').click();\n                }\n            });\n        }\n\n        // handle ajax links within sidebar menu\n        $('.page-sidebar').on('click', ' li > a.ajaxify', function (e) {\n            e.preventDefault();\n            App.scrollTop();\n            var url = $(this).attr(\"href\");\n            var menuContainer = $('.page-sidebar ul');\n\n            menuContainer.children('li.active').removeClass('active');\n            menuContainer.children('arrow.open').removeClass('open');\n\n            $(this).parents('li').each(function () {\n                $(this).addClass('active');\n                $(this).children('a > span.arrow').addClass('open');\n            });\n            $(this).parents('li').addClass('active');\n\n            if (App.getViewPort().width < resBreakpointMd && $('.page-sidebar').hasClass(\"in\")) { // close the menu on mobile view while laoding a page \n                $('.page-header .responsive-toggler').click();\n            }\n\n            Layout.loadAjaxContent(url, $(this));\n        });\n\n        // handle ajax link within main content\n        $('.page-content').on('click', '.ajaxify', function (e) {\n            e.preventDefault();\n            App.scrollTop();\n\n            var url = $(this).attr(\"href\");\n\n            if (App.getViewPort().width < resBreakpointMd && $('.page-sidebar').hasClass(\"in\")) { // close the menu on mobile view while laoding a page \n                $('.page-header .responsive-toggler').click();\n            }\n\n            Layout.loadAjaxContent(url);\n        });\n\n        // handle scrolling to top on responsive menu toggler click when header is fixed for mobile view\n        $(document).on('click', '.page-header-fixed-mobile .page-header .responsive-toggler', function(){\n            App.scrollTop(); \n        });      \n     \n        // handle sidebar hover effect        \n        handleFixedSidebarHoverEffect();\n\n        // handle the search bar close\n        $('.page-sidebar').on('click', '.sidebar-search .remove', function (e) {\n            e.preventDefault();\n            $('.sidebar-search').removeClass(\"open\");\n        });\n\n        // handle the search query submit on enter press\n        $('.page-sidebar .sidebar-search').on('keypress', 'input.form-control', function (e) {\n            if (e.which == 13) {\n                $('.sidebar-search').submit();\n                return false; //<---- Add this line\n            }\n        });\n\n        // handle the search submit(for sidebar search and responsive mode of the header search)\n        $('.sidebar-search .submit').on('click', function (e) {\n            e.preventDefault();\n            if ($('body').hasClass(\"page-sidebar-closed\")) {\n                if ($('.sidebar-search').hasClass('open') === false) {\n                    if ($('.page-sidebar-fixed').size() === 1) {\n                        $('.page-sidebar .sidebar-toggler').click(); //trigger sidebar toggle button\n                    }\n                    $('.sidebar-search').addClass(\"open\");\n                } else {\n                    $('.sidebar-search').submit();\n                }\n            } else {\n                $('.sidebar-search').submit();\n            }\n        });\n\n        // handle close on body click\n        if ($('.sidebar-search').size() !== 0) {\n            $('.sidebar-search .input-group').on('click', function(e){\n                e.stopPropagation();\n            });\n\n            $('body').on('click', function() {\n                if ($('.sidebar-search').hasClass('open')) {\n                    $('.sidebar-search').removeClass(\"open\");\n                }\n            });\n        }\n    };\n\n    // Helper function to calculate sidebar height for fixed sidebar layout.\n    var _calculateFixedSidebarViewportHeight = function () {\n        var sidebarHeight = App.getViewPort().height - $('.page-header').outerHeight(true);\n        if ($('body').hasClass(\"page-footer-fixed\")) {\n            sidebarHeight = sidebarHeight - $('.page-footer').outerHeight();\n        }\n\n        return sidebarHeight;\n    };\n\n    // Handles fixed sidebar\n    var handleFixedSidebar = function () {\n        var menu = $('.page-sidebar-menu');\n\n        handleSidebarAndContentHeight();\n\n        if ($('.page-sidebar-fixed').size() === 0) {\n            App.destroySlimScroll(menu);\n            return;\n        }\n\n        if (App.getViewPort().width >= resBreakpointMd && !$('body').hasClass('page-sidebar-menu-not-fixed')) {\n            menu.attr(\"data-height\", _calculateFixedSidebarViewportHeight());\n            App.destroySlimScroll(menu);\n            App.initSlimScroll(menu);\n            handleSidebarAndContentHeight();\n        } \n    };\n\n    // Handles sidebar toggler to close/hide the sidebar.\n    var handleFixedSidebarHoverEffect = function () {\n        if ($('body').hasClass('page-sidebar-fixed')) {\n            $('.page-sidebar').on('mouseenter', function () {\n                if ($('body').hasClass('page-sidebar-closed')) {\n                    $(this).find('.page-sidebar-menu').removeClass('page-sidebar-menu-closed');\n                }\n            }).on('mouseleave', function () {\n                if ($('body').hasClass('page-sidebar-closed')) {\n                    $(this).find('.page-sidebar-menu').addClass('page-sidebar-menu-closed');\n                }\n            });\n        }\n    };\n\n    // Hanles sidebar toggler\n    var handleSidebarToggler = function () {       \n        /**\n        if (Cookies && Cookies.get('sidebar_closed') === '1' && App.getViewPort().width >= resBreakpointMd) {\n            $('body').addClass('page-sidebar-closed');\n            $('.page-sidebar-menu').addClass('page-sidebar-menu-closed');\n        }\n        */\n\n        // handle sidebar show/hide\n        $('body').on('click', '.sidebar-toggler', function (e) {\n            var body = $('body');\n            var sidebar = $('.page-sidebar');\n            var sidebarMenu = $('.page-sidebar-menu');\n            $(\".sidebar-search\", sidebar).removeClass(\"open\");\n\n            if (body.hasClass(\"page-sidebar-closed\")) {\n                body.removeClass(\"page-sidebar-closed\");\n                sidebarMenu.removeClass(\"page-sidebar-menu-closed\");\n                if (Cookies) {\n                    Cookies.set('sidebar_closed', '0');\n                }\n            } else {\n                body.addClass(\"page-sidebar-closed\");\n                sidebarMenu.addClass(\"page-sidebar-menu-closed\");\n                if (body.hasClass(\"page-sidebar-fixed\")) {\n                    sidebarMenu.trigger(\"mouseleave\");\n                }\n                if (Cookies) {\n                    Cookies.set('sidebar_closed', '1');\n                }\n            }\n\n            $(window).trigger('resize');\n        });\n    };\n\n    // Handles the horizontal menu\n    var handleHorizontalMenu = function () {\n        //handle tab click\n        $('.page-header').on('click', '.hor-menu a[data-toggle=\"tab\"]', function (e) {\n            e.preventDefault();\n            var nav = $(\".hor-menu .nav\");\n            var active_link = nav.find('li.current');\n            $('li.active', active_link).removeClass(\"active\");\n            $('.selected', active_link).remove();\n            var new_link = $(this).parents('li').last();\n            new_link.addClass(\"current\");\n            new_link.find(\"a:first\").append('<span class=\"selected\"></span>');\n        });\n\n        // handle search box expand/collapse        \n        $('.page-header').on('click', '.search-form', function (e) {\n            $(this).addClass(\"open\");\n            $(this).find('.form-control').focus();\n\n            $('.page-header .search-form .form-control').on('blur', function (e) {\n                $(this).closest('.search-form').removeClass(\"open\");\n                $(this).unbind(\"blur\");\n            });\n        });\n\n        // handle hor menu search form on enter press\n        $('.page-header').on('keypress', '.hor-menu .search-form .form-control', function (e) {\n            if (e.which == 13) {\n                $(this).closest('.search-form').submit();\n                return false;\n            }\n        });\n\n        // handle header search button click\n        $('.page-header').on('mousedown', '.search-form.open .submit', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).closest('.search-form').submit();\n        });\n\n        \n        $(document).on('click', '.mega-menu-dropdown .dropdown-menu', function (e) {\n            e.stopPropagation();\n        });\n    };\n\n    // Handles Bootstrap Tabs.\n    var handleTabs = function () {\n        // fix content height on tab click\n        $('body').on('shown.bs.tab', 'a[data-toggle=\"tab\"]', function () {\n            handleSidebarAndContentHeight();\n        });\n    };\n\n    // Handles the go to top button at the footer\n    var handleGoTop = function () {\n        var offset = 300;\n        var duration = 500;\n\n        if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {  // ios supported\n            $(window).bind(\"touchend touchcancel touchleave\", function(e){\n               if ($(this).scrollTop() > offset) {\n                    $('.scroll-to-top').fadeIn(duration);\n                } else {\n                    $('.scroll-to-top').fadeOut(duration);\n                }\n            });\n        } else {  // general \n            $(window).scroll(function() {\n                if ($(this).scrollTop() > offset) {\n                    $('.scroll-to-top').fadeIn(duration);\n                } else {\n                    $('.scroll-to-top').fadeOut(duration);\n                }\n            });\n        }\n        \n        $('.scroll-to-top').click(function(e) {\n            e.preventDefault();\n            $('html, body').animate({scrollTop: 0}, duration);\n            return false;\n        });\n    };\n\n    // Hanlde 100% height elements(block, portlet, etc)\n    var handle100HeightContent = function () {\n\n        $('.full-height-content').each(function(){\n            var target = $(this);\n            var height;\n\n            height = App.getViewPort().height -\n                $('.page-header').outerHeight(true) -\n                $('.page-footer').outerHeight(true) -\n                $('.page-title').outerHeight(true) -\n                $('.page-bar').outerHeight(true);\n\n            if (target.hasClass('portlet')) {\n                var portletBody = target.find('.portlet-body');\n\n                App.destroySlimScroll(portletBody.find('.full-height-content-body')); // destroy slimscroll \n                \n                height = height -\n                    target.find('.portlet-title').outerHeight(true) -\n                    parseInt(target.find('.portlet-body').css('padding-top')) -\n                    parseInt(target.find('.portlet-body').css('padding-bottom')) - 5;\n\n                if (App.getViewPort().width >= resBreakpointMd && target.hasClass(\"full-height-content-scrollable\")) {\n                    height = height - 35;\n                    portletBody.find('.full-height-content-body').css('height', height);\n                    App.initSlimScroll(portletBody.find('.full-height-content-body'));\n                } else {\n                    portletBody.css('min-height', height);\n                }\n            } else {\n               App.destroySlimScroll(target.find('.full-height-content-body')); // destroy slimscroll \n\n                if (App.getViewPort().width >= resBreakpointMd && target.hasClass(\"full-height-content-scrollable\")) {\n                    height = height - 35;\n                    target.find('.full-height-content-body').css('height', height);\n                    App.initSlimScroll(target.find('.full-height-content-body'));\n                } else {\n                    target.css('min-height', height);\n                }\n            }\n        });        \n    };\n    //* END:CORE HANDLERS *//\n\n    return {\n        // Main init methods to initialize the layout\n        //IMPORTANT!!!: Do not modify the core handlers call order.\n\n        initHeader: function() {\n            handleHorizontalMenu(); // handles horizontal menu    \n        },\n\n        setSidebarMenuActiveLink: function(mode, el) {\n            handleSidebarMenuActiveLink(mode, el, null);\n        },\n\n        setAngularJsSidebarMenuActiveLink: function(mode, el, $state) {\n            handleSidebarMenuActiveLink(mode, el, $state);\n        },\n\n        initSidebar: function($state) {\n            //layout handlers\n            handleFixedSidebar(); // handles fixed sidebar menu\n            handleSidebarMenu(); // handles main menu\n            handleSidebarToggler(); // handles sidebar hide/show\n\n            if (App.isAngularJsApp()) {      \n                handleSidebarMenuActiveLink('match', null, $state); // init sidebar active links \n            }\n\n            App.addResizeHandler(handleFixedSidebar); // reinitialize fixed sidebar on window resize\n        },\n\n        initContent: function() {\n            handle100HeightContent(); // handles 100% height elements(block, portlet, etc)\n            handleTabs(); // handle bootstrah tabs\n\n            App.addResizeHandler(handleSidebarAndContentHeight); // recalculate sidebar & content height on window resize\n            App.addResizeHandler(handle100HeightContent); // reinitialize content height on window resize \n        },\n\n        initFooter: function() {\n            handleGoTop(); //handles scroll to top functionality in the footer\n        },\n\n        init: function () {            \n            this.initHeader();\n            this.initSidebar(null);\n            this.initContent();\n            this.initFooter();\n        },\n\n        loadAjaxContent: function(url, sidebarMenuLink) {\n            var pageContent = $('.page-content .page-content-body');    \n\n            App.startPageLoading({animate: true});\n            \n            $.ajax({\n                type: \"GET\",\n                cache: false,\n                url: url,\n                dataType: \"html\",\n                success: function (res) {    \n                    App.stopPageLoading();\n                                    \n                    for (var i = 0; i < ajaxContentSuccessCallbacks.length; i++) {\n                        ajaxContentSuccessCallbacks[i].call(res);\n                    }\n\n                    if (sidebarMenuLink.size() > 0 && sidebarMenuLink.parents('li.open').size() === 0) {\n                        $('.page-sidebar-menu > li.open > a').click();\n                    }\n\n                    pageContent.html(res);\n                    Layout.fixContentHeight(); // fix content height\n                    App.initAjax(); // initialize core stuff\n                },\n                error: function (res, ajaxOptions, thrownError) {\n                    App.stopPageLoading();\n                    pageContent.html('<h4>Could not load the requested content.</h4>');\n\n                    for (var i = 0; i < ajaxContentErrorCallbacks.length; i++) {\n                        ajaxContentSuccessCallbacks[i].call(res);\n                    }                    \n                }\n            });\n        },\n\n        addAjaxContentSuccessCallback: function(callback) {\n            ajaxContentSuccessCallbacks.push(callback);\n        },\n\n        addAjaxContentErrorCallback: function(callback) {\n            ajaxContentErrorCallbacks.push(callback);\n        },\n\n        //public function to fix the sidebar and content height accordingly\n        fixContentHeight: function () {\n            handleSidebarAndContentHeight();\n        },\n\n        initFixedSidebarHoverEffect: function() {\n            handleFixedSidebarHoverEffect();\n        },\n\n        initFixedSidebar: function() {\n            handleFixedSidebar();\n        },\n\n        getLayoutImgPath: function () {\n            return App.getAssetsPath() + layoutImgPath;\n        },\n\n        getLayoutCssPath: function () {\n            return App.getAssetsPath() + layoutCssPath;\n        }\n    };\n\n}();\n\nif (App.isAngularJsApp() === false) {\n    jQuery(document).ready(function() {    \n       Layout.init(); // init metronic core componets\n    });\n}","/**\nCore script to handle the entire theme and core functions\n**/\nvar QuickSidebar = function () {\n\n    // Handles quick sidebar toggler\n    var handleQuickSidebarToggler = function () {\n        // quick sidebar toggler\n        $('.dropdown-quick-sidebar-toggler a, .page-quick-sidebar-toggler, .quick-sidebar-toggler').click(function (e) {\n            $('body').toggleClass('page-quick-sidebar-open'); \n        });\n    };\n\n    // Handles quick sidebar chats\n    var handleQuickSidebarChat = function () {\n        var wrapper = $('.page-quick-sidebar-wrapper');\n        var wrapperChat = wrapper.find('.page-quick-sidebar-chat');\n\n        var initChatSlimScroll = function () {\n            var chatUsers = wrapper.find('.page-quick-sidebar-chat-users');\n            var chatUsersHeight;\n\n            chatUsersHeight = wrapper.height() - wrapper.find('.nav-tabs').outerHeight(true);\n\n            // chat user list \n            App.destroySlimScroll(chatUsers);\n            chatUsers.attr(\"data-height\", chatUsersHeight);\n            App.initSlimScroll(chatUsers);\n\n            var chatMessages = wrapperChat.find('.page-quick-sidebar-chat-user-messages');\n            var chatMessagesHeight = chatUsersHeight - wrapperChat.find('.page-quick-sidebar-chat-user-form').outerHeight(true);\n            chatMessagesHeight = chatMessagesHeight - wrapperChat.find('.page-quick-sidebar-nav').outerHeight(true);\n\n            // user chat messages \n            App.destroySlimScroll(chatMessages);\n            chatMessages.attr(\"data-height\", chatMessagesHeight);\n            App.initSlimScroll(chatMessages);\n        };\n\n        initChatSlimScroll();\n        App.addResizeHandler(initChatSlimScroll); // reinitialize on window resize\n\n        wrapper.find('.page-quick-sidebar-chat-users .media-list > .media').click(function () {\n            wrapperChat.addClass(\"page-quick-sidebar-content-item-shown\");\n        });\n\n        wrapper.find('.page-quick-sidebar-chat-user .page-quick-sidebar-back-to-list').click(function () {\n            wrapperChat.removeClass(\"page-quick-sidebar-content-item-shown\");\n        });\n\n        var handleChatMessagePost = function (e) {\n            e.preventDefault();\n\n            var chatContainer = wrapperChat.find(\".page-quick-sidebar-chat-user-messages\");\n            var input = wrapperChat.find('.page-quick-sidebar-chat-user-form .form-control');\n\n            var text = input.val();\n            if (text.length === 0) {\n                return;\n            }\n\n            var preparePost = function(dir, time, name, avatar, message) {\n                var tpl = '';\n                tpl += '<div class=\"post '+ dir +'\">';\n                tpl += '<img class=\"avatar\" alt=\"\" src=\"' + Layout.getLayoutImgPath() + avatar +'.jpg\"/>';\n                tpl += '<div class=\"message\">';\n                tpl += '<span class=\"arrow\"></span>';\n                tpl += '<a href=\"#\" class=\"name\">Bob Nilson</a>&nbsp;';\n                tpl += '<span class=\"datetime\">' + time + '</span>';\n                tpl += '<span class=\"body\">';\n                tpl += message;\n                tpl += '</span>';\n                tpl += '</div>';\n                tpl += '</div>';\n\n                return tpl;\n            };\n\n            // handle post\n            var time = new Date();\n            var message = preparePost('out', (time.getHours() + ':' + time.getMinutes()), \"Bob Nilson\", 'avatar3', text);\n            message = $(message);\n            chatContainer.append(message);\n\n            chatContainer.slimScroll({\n                scrollTo: '1000000px'\n            });\n\n            input.val(\"\");\n\n            // simulate reply\n            setTimeout(function(){\n                var time = new Date();\n                var message = preparePost('in', (time.getHours() + ':' + time.getMinutes()), \"Ella Wong\", 'avatar2', 'Lorem ipsum doloriam nibh...');\n                message = $(message);\n                chatContainer.append(message);\n\n                chatContainer.slimScroll({\n                    scrollTo: '1000000px'\n                });\n            }, 3000);\n        };\n\n        wrapperChat.find('.page-quick-sidebar-chat-user-form .btn').click(handleChatMessagePost);\n        wrapperChat.find('.page-quick-sidebar-chat-user-form .form-control').keypress(function (e) {\n            if (e.which == 13) {\n                handleChatMessagePost(e);\n                return false;\n            }\n        });\n    };\n\n    // Handles quick sidebar tasks\n    var handleQuickSidebarAlerts = function () {\n        var wrapper = $('.page-quick-sidebar-wrapper');\n\n        var initAlertsSlimScroll = function () {\n            var alertList = wrapper.find('.page-quick-sidebar-alerts-list');\n            var alertListHeight;\n\n            alertListHeight = wrapper.height() - 80 - wrapper.find('.nav-justified > .nav-tabs').outerHeight();\n\n            // alerts list \n            App.destroySlimScroll(alertList);\n            alertList.attr(\"data-height\", alertListHeight);\n            App.initSlimScroll(alertList);\n        };\n\n        initAlertsSlimScroll();\n        App.addResizeHandler(initAlertsSlimScroll); // reinitialize on window resize\n    };\n\n    // Handles quick sidebar settings\n    var handleQuickSidebarSettings = function () {\n        var wrapper = $('.page-quick-sidebar-wrapper');\n\n        var initSettingsSlimScroll = function () {\n            var settingsList = wrapper.find('.page-quick-sidebar-settings-list');\n            var settingsListHeight;\n\n            settingsListHeight = wrapper.height() - 80 - wrapper.find('.nav-justified > .nav-tabs').outerHeight();\n           \n            // alerts list \n            App.destroySlimScroll(settingsList);\n            settingsList.attr(\"data-height\", settingsListHeight);\n            App.initSlimScroll(settingsList);\n        };\n\n        initSettingsSlimScroll();\n        App.addResizeHandler(initSettingsSlimScroll); // reinitialize on window resize\n    };\n\n    return {\n\n        init: function () {\n            //layout handlers\n            handleQuickSidebarToggler(); // handles quick sidebar's toggler\n            handleQuickSidebarChat(); // handles quick sidebar's chats\n            handleQuickSidebarAlerts(); // handles quick sidebar's alerts\n            handleQuickSidebarSettings(); // handles quick sidebar's setting\n        }\n    };\n\n}();\n\nif (App.isAngularJsApp() === false) { \n    jQuery(document).ready(function() {    \n       QuickSidebar.init(); // init metronic core componets\n    });\n}"],"sourceRoot":"/source/"}